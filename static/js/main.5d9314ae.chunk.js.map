{"version":3,"sources":["components/Header.js","components/Menu.js","components/SimpleLineChart.js","components/SimpleTable.js","components/Content.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this$props","this","props","classes","setOpen","open","react_default","a","createElement","react","AppBar","position","className","classNames","appBar","appBarShift","Toolbar","disableGutters","toolbar","IconButton","color","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography","component","variant","noWrap","title","React","Component","withStyles","theme","backgroundColor","paddingRight","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","concat","enteringScreen","marginRight","display","flexGrow","Menu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","menu","setContentrender","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider","List","map","item","i","ListItem","button","key","event","ListItemIcon","SvgIcon","d","icon","ListItemText","primary","objectSpread","alignItems","justifyContent","padding","mixins","whiteSpace","defineProperty","overflowX","spacing","breakpoints","up","SimpleLineChart","id","createData","name","calories","fat","carbs","protein","data","root","table","minWidth","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","n","scope","Content","contentrender","content","appBarSpacer","gutterBottom","height","overflow","chartContainer","tableContainer","axios","require","Dashboard","myData","getmyData","bind","assertThisInitialized","get","response","status","setState","value","_this$state","console","log","CssBaseline","components_Header","components_Menu","components_Content","App","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d9314ae.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    toolbar: {\n        backgroundColor: \"#128c7e\",\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\nclass Header extends React.Component {\n\n    render() {\n        const { classes, setOpen, open } = this.props;\n        // const open = false;\n\n        return (\n            <Fragment>\n                <AppBar\n                    position=\"absolute\"\n                    className={classNames(classes.appBar, open && classes.appBarShift)}\n                >\n                    <Toolbar disableGutters={!open} className={classes.toolbar}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={setOpen}\n                            className={classNames(\n                                classes.menuButton,\n                                open && classes.menuButtonHidden,\n                            )}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Stat Dashboard\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Fragment>\n        );\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    }\n});\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: [],\n        };\n    }\n\n    render() {\n        const { classes, menu, setOpen, open, setContentrender } = this.props;\n        // console.log(menu)\n\n        return (\n            <Fragment>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={setOpen}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {menu ? menu.map((item, i) => (\n                            <ListItem button key={i} onClick={(event) => setContentrender(item.title)}>\n                                <ListItemIcon>\n                                    <SvgIcon>\n                                        <path d={item.icon} />\n                                    </SvgIcon>\n                                </ListItemIcon>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )): null}\n                    </List>\n                </Drawer>\n            </Fragment>\n        );\n    }\n}\n\nMenu.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Menu);","import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nconst data = [\n    { name: 'Mon', Visits: 2200, Orders: 3400 },\n    { name: 'Tue', Visits: 1280, Orders: 2398 },\n    { name: 'Wed', Visits: 5000, Orders: 4300 },\n    { name: 'Thu', Visits: 4780, Orders: 2908 },\n    { name: 'Fri', Visits: 5890, Orders: 4800 },\n    { name: 'Sat', Visits: 4390, Orders: 3800 },\n    { name: 'Sun', Visits: 4490, Orders: 4300 },\n];\n\nfunction SimpleLineChart() {\n    return (\n        // 99% per https://github.com/recharts/recharts/issues/172\n        <ResponsiveContainer width=\"99%\" height={320}>\n            <LineChart data={data}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Visits\" stroke=\"#82ca9d\" />\n                <Line type=\"monotone\" dataKey=\"Orders\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default SimpleLineChart;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n};\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst data = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction SimpleTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat (g)</TableCell>\n                        <TableCell align=\"right\">Carbs (g)</TableCell>\n                        <TableCell align=\"right\">Protein (g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(n => (\n                        <TableRow key={n.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {n.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{n.calories}</TableCell>\n                            <TableCell align=\"right\">{n.fat}</TableCell>\n                            <TableCell align=\"right\">{n.carbs}</TableCell>\n                            <TableCell align=\"right\">{n.protein}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleLineChart from './SimpleLineChart';\nimport SimpleTable from './SimpleTable';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n});\n\nclass Content extends React.Component {\n\n    render() {\n        const { classes, contentrender } = this.props;\n\n        return (\n            <Fragment>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                        {contentrender}\n                    </Typography>\n                    {/* <Typography component=\"div\" className={classes.chartContainer}>\n                        <SimpleLineChart />\n                    </Typography>\n                    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                        Products\n                    </Typography>\n                    <div className={classes.tableContainer}>\n                        <SimpleTable />\n                    </div> */}\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\n\nconst axios = require('axios');\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    }\n});\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            myData: {},\n            open: false,\n            contentrender: \"\"\n        };\n        this.getmyData = this.getmyData.bind(this)\n        this.setOpen = this.setOpen.bind(this)\n        this.setContentrender = this.setContentrender.bind(this)\n    }\n\n    async getmyData() {\n        const response = await axios.get('/data.json', {})\n        if (response.status === 200) {\n            this.setState(state => {\n                state.myData = response.data\n                return state\n            })\n        }\n    }\n\n    setOpen() {\n        this.setState(state => {\n            state.open = !state.open\n            return state\n        })\n    }\n\n    setContentrender(value) {\n        this.setState(state => {\n            state.contentrender = value\n            return state\n        })\n    }\n\n    componentDidMount() {\n        this.getmyData();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { myData, open, contentrender } = this.state;\n        console.log(myData)\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <Header setOpen={this.setOpen} open={open} />\n                <Menu menu={myData.menu} setOpen={this.setOpen} open={open} data={myData.menu} setContentrender={this.setContentrender} />\n                <Content content={myData.content} contentrender={contentrender} />\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Dashboard /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}